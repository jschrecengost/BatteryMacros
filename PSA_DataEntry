Private Sub CommandButton1_Click()

Dim con As ADODB.Connection
Dim rs As ADODB.Recordset
Set con = New ADODB.Connection

Dim sampleName As String
sampleName = TextBox01.Text
Dim sampleLetter As String
sampleLetter = TextBox02.Text
Dim sampletype As String
sampletype = TextBox03.Text
Dim description As String
description = TextBox04.Text
Dim experimentID As String
experimentID = TextBox05.Text
Dim filename As String
filename = TextBox06.Text
Dim measurementDate As String
measurementDate = TextBox07.Text
Dim meaurementOperator As String
measurementOperator = TextBox08.Text
Dim notebookNumber As String
notebookNumber = TextBox09.Text
Dim notes As String
notes = TextBox10.Text
Dim dx10 As String
dx10 = TextBox11.Text
Dim dx50 As String
dx50 = TextBox12.Text
Dim Dx90 As String
Dx90 = TextBox13.Text

If sampleName = "" Then
MsgBox "Enter Sample Name!"
Exit Sub
End If
sampleName = "'" + sampleName + "'"

If (validateString(sampleLetter) = True) Then
sampleLetter = "'" + sampleLetter + "'"
Else
MsgBox "Error with Sample Letter!"
Exit Sub
End If

sampletype = "'" + sampletype + "'"

description = "'" + description + "'"

experimentID = "'" + experimentID + "'"

filename = "'" + filename + "'"

If (dateCheck(measurementDate) = True) Then
measurementDate = Format(measurementDate, "YYYY-MM-DD")
TextBox07.Text = measurementDate
measurementDate = "'" + measurementDate + "'"
Else
MsgBox "Incorrect Measurement Date Format"
Exit Sub
End If

If (validateString(measurementOperator) = True) Then
measurementOperator = "'" + measurementOperator + "'"
Else
MsgBox "Error with Measurement Operator!"

Exit Sub

End If

notebookNumber = "'" + notebookNumber + "'"

notes = "'" + notes + "'"

If (validateNumerically(dx10) = True) Then
dx10 = "'" + dx10 + "'"
Else
MsgBox "Error with Dx10!"

Exit Sub

End If

If (validateNumerically(dx50) = True) Then
dx50 = "'" + dx50 + "'"
Else
MsgBox "Error with Dx50!"

Exit Sub

End If

If (validateNumerically(Dx90) = True) Then
Dx90 = "'" + Dx90 + "'"
Else
MsgBox "Error with Dx90!"

Exit Sub

End If
Dim Sql As String
Sql = ""


'MsgBox validateString(sampleLetter)


'Sql = CDate(TextBox07.Text).toString("yyyy-MM-dd")
'Above line shows how to convert an unformatted date string to a MySQL format string

con.Open "Driver={MySQL ODBC 8.0 Unicode Driver}; Server = 10.10.240.151; Database=battery;User=battery;Password=3point14;"

Sql = "insert into battery.analysis_particle_sizing"

Sql = Sql + "(sample_name,sample_letter,sample_type,description,experimentID,filename,"
Sql = Sql + "measurement_date,measurement_operator,notebook_number,notes,Dx10,Dx50,Dx90)"
Sql = Sql + " values(" & sampleName & "," & sampleLetter & "," & sampletype
Sql = Sql + "," & description & "," & experimentID & "," & filename
Sql = Sql + "," & measurementDate & "," & measurementOperator & "," & notebookNumber
Sql = Sql + "," & notes & "," & dx10 & "," & dx50
Sql = Sql + "," & Dx90 & ");"

'MsgBox Sql
'Above line displays a messagebox with the current value of the variable Sql

'con.Execute Sql
con.Close
MsgBox "Done!"

End Sub

Private Function validateString(ByVal textBoxText As String) As Boolean
Dim notAllowedArray
validateString = True
notAllowedArray = Array("#", "=", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".")
Dim allGood As Boolean
allGood = True

Dim Counter As Integer
Dim Counter2 As Integer

Dim arrayLength As Integer
arrayLength = UBound(notAllowedArray) - LBound(notAllowedArray) + 1

MyString = "AutomateExcel" 'define string
Dim currentCharacter As String


For Counter = 1 To Len(textBoxText)
currentCharacter = Mid(textBoxText, Counter, 1)
For Counter2 = 1 To arrayLength
Dim intResult As Integer
intResult = StrComp(currentCharacter, notAllowedArray(Counter2 - 1))


If (intResult = 0) Then
'MsgBox "Error, Character not allowed! " & currentCharacter
validateString = False
End If



'MsgBox notAllowedArray(Counter2)
    'do something to each character in string
    'here we'll msgbox each character
   ' MsgBox Mid(textBoxText, Counter, 1)
Next
Next


End Function


Private Function validateNumerically(ByVal textBoxText As String) As Boolean
Dim AllowedArray
validateNumerically = False
AllowedArray = Array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".")
Dim allGood As Boolean
allGood = False

Dim Counter As Integer
Dim Counter2 As Integer

Dim arrayLength As Integer
arrayLength = UBound(AllowedArray) - LBound(AllowedArray) + 1

MyString = "AutomateExcel" 'define string
Dim currentCharacter As String


For Counter = 1 To Len(textBoxText)
currentCharacter = Mid(textBoxText, Counter, 1)
For Counter2 = 1 To arrayLength
Dim intResult As Integer
intResult = StrComp(currentCharacter, AllowedArray(Counter2 - 1))


If (intResult = 0) Then
'MsgBox "Error, Character not allowed! " & currentCharacter
validateNumerically = True
End If



'MsgBox notAllowedArray(Counter2)
    'do something to each character in string
    'here we'll msgbox each character
   ' MsgBox Mid(textBoxText, Counter, 1)
Next
Next


End Function

Private Function IsEmptyCheck(ByVal textBoxText As String) As Boolean
IsEmptyCheck = True
If (IsEmpty(textBoxText) = True) Then
    MsgBox "Error with Sample Name!"
    Else
textBoxText = False

End If
End Function

Private Function dateCheck(ByVal textBoxText As String) As Boolean

dateCheck = False
Dim datevalue As Date
On Error GoTo TEST
datevalue = CDate(textBoxText)

Dim testString
testString = Format(textBoxText, "YYYY-MM-DD")

If (IsDate(textBoxText)) Then
dateCheck = True
MsgBox "WOOO!"
Exit Function

TEST:
 MsgBox "ERROR"
 
Else
  MsgBox "Please use a valid yyyy-mm-dd date format!"

End If
 
End Function
